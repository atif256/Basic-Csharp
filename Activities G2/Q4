using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Reflection.PortableExecutable;

class Employee
{
    public string EmployeeName { get; set; }
    public string ID { get; set; }
    public double Salary { get; set; }
    public string DateJoined { get; set; }
}

class Program
{
    static void Main()
    {
        var empList = new List<Employee>();
        string path = @"D:\tempC\Employee.csv";
        // Read data from Employee.csv
        using (StreamReader reader = new StreamReader(path))
        {
            string line;
            bool firstLine = true; // Add this flag to skip the first line
            while ((line = reader.ReadLine()) != null)
            {
                    if (firstLine)
                    {
                        firstLine = false; // Skip the first line (header)
                        continue;
                    }
                    string[] parts = line.Split(',');
                    if (parts.Length == 4)
                    {
                        var employee = new Employee
                        {
                            EmployeeName = parts[0],
                            ID = parts[1],
                            Salary = double.Parse(parts[2]), 
                            DateJoined = parts[3]
                        };
                        empList.Add(employee);
                    }
            }
        }
  

        // Sort employees by name in ascending order
        var sortedByName = empList.OrderBy(e => e.EmployeeName).ToList();

        // Filter employees who joined before 2003
        var joinedBefore2003 = empList
            .Where(e => int.Parse(e.DateJoined.Substring(e.DateJoined.LastIndexOf('/') + 1)) < 2003)
            .ToList();

        // Filter employees with a salary above 5000.00
        var highSalaryEmployees = empList
            .Where(e => e.Salary > 5000.00)
            .ToList();

        // Display the results
        Console.WriteLine("Employees sorted by name in ascending order:");
        foreach (var employee in sortedByName)
        {
            Console.WriteLine($"{employee.EmployeeName}, {employee.ID}, {employee.Salary}, {employee.DateJoined}");
        }

        Console.WriteLine("\nEmployees who joined before 2003:");
        foreach (var employee in joinedBefore2003)
        {
            Console.WriteLine($"{employee.EmployeeName}, {employee.ID}, {employee.Salary}, {employee.DateJoined}");
        }

        Console.WriteLine("\nEmployees with a salary above 5000.00:");
        foreach (var employee in highSalaryEmployees)
        {
            Console.WriteLine($"{employee.EmployeeName}, {employee.ID}, {employee.Salary}, {employee.DateJoined}");
        }

        // Add two more sets of data to the file
        string newData1 = "Lim Ping Seow,B3345,4500,12/12/2004";
        string newData2 = "Miko Lam,B5534,2500,1/3/2018";

        File.AppendAllLines(path, new[] { newData1, newData2 });

        // Display the updated contents of the file
        Console.WriteLine("\nUpdated contents of Employee.csv:");
        foreach (var line in File.ReadLines(path))
        {
            Console.WriteLine(line);
        }
    }
}
